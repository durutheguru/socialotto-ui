{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/interceptors/InterceptorRegistry.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/interceptors/InterceptorRegistry.ts","mtime":1586895796617},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2RkdXJ1L1ZTQ29kZS9PbWFyemVVSS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9kZHVydS9WU0NvZGUvT21hcnplVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IHsgTG9nIH0gZnJvbSAnQC9jb21wb25lbnRzL3V0aWwnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwoKdmFyIEludGVyY2VwdG9yUmVnaXN0cnkgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBJbnRlcmNlcHRvclJlZ2lzdHJ5KCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEludGVyY2VwdG9yUmVnaXN0cnkpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEludGVyY2VwdG9yUmVnaXN0cnksIG51bGwsIFt7CiAgICBrZXk6ICJhZGRJbnRlcmNlcHRvciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkSW50ZXJjZXB0b3IoaW50ZXJjZXB0b3IpIHsKICAgICAgaWYgKCFwcm9jZXNzLmVudi5WVUVfQVBQX0VOQUJMRV9JTlRFUkNFUFRPUlMpIHsKICAgICAgICBMb2cuaW5mbygnSW50ZXJjZXB0b3JzIGRpc2FibGVkLiBJZ25vcmluZyBJbnRlcmNlcHRvciByZWdpc3RlcmF0aW9uLicpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5pbnRlcmNlcHRvcnMucHVzaChpbnRlcmNlcHRvcik7CiAgICAgIGF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoSW50ZXJjZXB0b3JSZWdpc3RyeS5ERUZBVUxUX1JFU1BPTlNFX0lOVEVSQ0VQVE9SLCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gaW50ZXJjZXB0b3IucmVqZWN0ZWRQcm9taXNlSGFuZGxlcihlcnJvcik7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldEludGVyY2VwdG9yQnlVcmwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEludGVyY2VwdG9yQnlVcmwodXJsKSB7CiAgICAgIGlmICghdXJsKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IEludGVyY2VwdG9yUmVnaXN0cnkuaW50ZXJjZXB0b3JzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkgewogICAgICAgICAgdmFyIGkgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWU7CiAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IyID0gZmFsc2U7CiAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkOwoKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSBpLmludGVyY2VwdENvbmZpZ3NbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHsKICAgICAgICAgICAgICB2YXIgdSA9IF9zdGVwMi52YWx1ZTsKCiAgICAgICAgICAgICAgaWYgKHVybC5pbmRleE9mKHUudXJsKSA+IC0xKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjIgPSB0cnVlOwogICAgICAgICAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7CiAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikgewogICAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IyOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlOwogICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTsKICAgICAgICAgIH0KICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7CiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIEludGVyY2VwdG9yUmVnaXN0cnk7Cn0oKTsKCmV4cG9ydCB7IEludGVyY2VwdG9yUmVnaXN0cnkgYXMgZGVmYXVsdCB9OwpJbnRlcmNlcHRvclJlZ2lzdHJ5LmludGVyY2VwdG9ycyA9IFtdOwoKSW50ZXJjZXB0b3JSZWdpc3RyeS5ERUZBVUxUX1JFU1BPTlNFX0lOVEVSQ0VQVE9SID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgcmV0dXJuIHJlc3BvbnNlOwp9OwoKYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICB2YXIgaW50ZXJjZXB0b3IgPSBJbnRlcmNlcHRvclJlZ2lzdHJ5LmdldEludGVyY2VwdG9yQnlVcmwoY29uZmlnLnVybCk7CgogIGlmIChwcm9jZXNzLmVudi5WVUVfQVBQX0VOQUJMRV9JTlRFUkNFUFRPUlMgJiYgaW50ZXJjZXB0b3IpIHsKICAgIGNvbmZpZy51cmwgPSAnaHR0cDovL2xvY2FsaG9zdDowJyArIGludGVyY2VwdG9yLmdldE1hdGNoaW5nVXJsKGNvbmZpZy51cmwgfHwgJycpOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSk7"},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/interceptors/InterceptorRegistry.ts"],"names":[],"mappings":";;;;;;;;;AAAA,SAAS,GAAT,QAAoB,mBAApB;AACA,OAAO,KAAP,MAAqE,OAArE;;IAIqB,mB;;;;;;;;;mCAMY,W,EAAyB;AAClD,UAAI,CAAC,OAAO,CAAC,GAAR,CAAY,2BAAjB,EAA8C;AAC1C,QAAA,GAAG,CAAC,IAAJ,CAAS,4DAAT;AACA;AACH;;AAED,WAAK,YAAL,CAAkB,IAAlB,CAAuB,WAAvB;AACA,MAAA,KAAK,CAAC,YAAN,CAAmB,QAAnB,CAA4B,GAA5B,CACI,mBAAmB,CAAC,4BADxB,EAEI,UAAC,KAAD;AAAA,eAAuB,WAAW,CAAC,sBAAZ,CAAmC,KAAnC,CAAvB;AAAA,OAFJ;AAIH;;;wCAGiC,G,EAAuB;AACrD,UAAI,CAAC,GAAL,EAAU;AACN;AACH;;AAHoD;AAAA;AAAA;;AAAA;AAKrD,6BAAgB,mBAAmB,CAAC,YAApC,8HAAkD;AAAA,cAAvC,CAAuC;AAAA;AAAA;AAAA;;AAAA;AAC9C,kCAAgB,CAAC,CAAC,gBAAlB,mIAAoC;AAAA,kBAAzB,CAAyB;;AAChC,kBAAI,GAAG,CAAC,OAAJ,CAAY,CAAC,CAAC,GAAd,IAAqB,CAAC,CAA1B,EAA6B;AACzB,uBAAO,CAAP;AACH;AACJ;AAL6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMjD;AAXoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYxD;;;;;;SAhCgB,mB;AAGH,mBAAA,CAAA,YAAA,GAA+B,EAA/B;;AAgCC,mBAAA,CAAA,4BAAA,GAA+B,UAAC,QAAD,EAAiC;AAC3E,SAAO,QAAP;AACH,CAFc;;AAQnB,KAAK,CAAC,YAAN,CAAmB,OAAnB,CAA2B,GAA3B,CAA+B,UAAC,MAAD,EAAoC;AAC/D,MAAM,WAAW,GAAG,mBAAmB,CAAC,mBAApB,CAAwC,MAAM,CAAC,GAA/C,CAApB;;AAEA,MAAI,OAAO,CAAC,GAAR,CAAY,2BAAZ,IAA2C,WAA/C,EAA4D;AACxD,IAAA,MAAM,CAAC,GAAP,GAAa,uBAAuB,WAAW,CAAC,cAAZ,CAA2B,MAAM,CAAC,GAAP,IAAc,EAAzC,CAApC;AACH;;AAED,SAAO,MAAP;AACH,CARD","sourcesContent":["import { Log } from '@/components/util';\nimport axios, { AxiosResponse, AxiosRequestConfig, AxiosError } from 'axios';\nimport IInterceptor from './IInterceptor';\n\n\nexport default class InterceptorRegistry {\n\n    \n    public static interceptors: IInterceptor[] = [];\n\n\n    public static addInterceptor(interceptor: IInterceptor) {\n        if (!process.env.VUE_APP_ENABLE_INTERCEPTORS) {\n            Log.info('Interceptors disabled. Ignoring Interceptor registeration.');\n            return;\n        }\n\n        this.interceptors.push(interceptor);\n        axios.interceptors.response.use(\n            InterceptorRegistry.DEFAULT_RESPONSE_INTERCEPTOR, \n            (error: AxiosError) => interceptor.rejectedPromiseHandler(error)\n        );\n    }\n\n\n    public static getInterceptorByUrl(url: string | undefined): IInterceptor | undefined {\n        if (!url) {\n            return;\n        }\n\n        for (const i of InterceptorRegistry.interceptors) {\n            for (const u of i.interceptConfigs) {\n                if (url.indexOf(u.url) > -1) {\n                    return i;\n                }\n            }\n        }\n    }\n\n\n    private static DEFAULT_RESPONSE_INTERCEPTOR = (response: AxiosResponse): any => {\n        return response;\n    }\n\n\n}\n\n\naxios.interceptors.request.use((config: AxiosRequestConfig): any => {\n    const interceptor = InterceptorRegistry.getInterceptorByUrl(config.url);\n\n    if (process.env.VUE_APP_ENABLE_INTERCEPTORS && interceptor) {\n        config.url = 'http://localhost:0' + interceptor.getMatchingUrl(config.url || '');\n    }\n\n    return config;\n});\n\n\n"],"sourceRoot":""}]}