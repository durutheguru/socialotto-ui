{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/interceptors/auth/AuthCheckInterceptor.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/interceptors/auth/AuthCheckInterceptor.ts","mtime":1587760893531},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZGR1cnUvVlNDb2RlL09tYXJ6ZVVJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2RkdXJ1L1ZTQ29kZS9PbWFyemVVSS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9kZHVydS9WU0NvZGUvT21hcnplVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IEJhc2VJbnRlcmNlcHRvciBmcm9tICcuLi9CYXNlSW50ZXJjZXB0b3InOwppbXBvcnQgSW50ZXJjZXB0b3JSZWdpc3RyeSBmcm9tICcuLi9JbnRlcmNlcHRvclJlZ2lzdHJ5JzsKCnZhciBBdXRoQ2hlY2tJbnRlcmNlcHRvciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Jhc2VJbnRlcmNlcHRvcikgewogIF9pbmhlcml0cyhBdXRoQ2hlY2tJbnRlcmNlcHRvciwgX0Jhc2VJbnRlcmNlcHRvcik7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQXV0aENoZWNrSW50ZXJjZXB0b3IpOwoKICBmdW5jdGlvbiBBdXRoQ2hlY2tJbnRlcmNlcHRvcigpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0aENoZWNrSW50ZXJjZXB0b3IpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5pbnRlcmNlcHRDb25maWdzID0gW3sKICAgICAgdXJsOiAnL2FwaS92MS9hdXRoJywKICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBoZWFkZXJzOiB7fSwKICAgICAgICBib2R5OiB7fSwKICAgICAgICBzdGF0dXM6IDIwMAogICAgICB9CiAgICB9XTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIHJldHVybiBBdXRoQ2hlY2tJbnRlcmNlcHRvcjsKfShCYXNlSW50ZXJjZXB0b3IpOwoKZXhwb3J0IHsgQXV0aENoZWNrSW50ZXJjZXB0b3IgYXMgZGVmYXVsdCB9OwpJbnRlcmNlcHRvclJlZ2lzdHJ5LnJlZ2lzdGVyKG5ldyBBdXRoQ2hlY2tJbnRlcmNlcHRvcigpKTs="},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/interceptors/auth/AuthCheckInterceptor.ts"],"names":[],"mappings":";;;AACA,OAAO,eAAP,MAA4B,oBAA5B;AACA,OAAO,mBAAP,MAAgC,wBAAhC;;IAIqB,oB;;;;;AAArB,kCAAA;AAAA;;AAAA;;;AAGW,UAAA,gBAAA,GAAsC,CACzC;AACI,MAAA,GAAG,EAAE,cADT;AAEI,MAAA,MAAM,EAAE,KAFZ;AAGI,MAAA,QAAQ,EAAE;AACN,QAAA,OAAO,EAAE,EADH;AAEN,QAAA,IAAI,EAAE,EAFA;AAGN,QAAA,MAAM,EAAE;AAHF;AAHd,KADyC,CAAtC;AAHX;AAgBC;;;EAhBiD,e;;SAA7B,oB;AAmBrB,mBAAmB,CAAC,QAApB,CAA6B,IAAI,oBAAJ,EAA7B","sourcesContent":["import InterceptConfig from '@/interceptors/InterceptConfig';\nimport BaseInterceptor from '../BaseInterceptor';\nimport InterceptorRegistry from '../InterceptorRegistry';\n\n\n\nexport default class AuthCheckInterceptor extends BaseInterceptor {\n\n\n    public interceptConfigs: InterceptConfig[] = [\n        {\n            url: '/api/v1/auth',\n            method: 'GET',\n            response: {\n                headers: {},\n                body: {},\n                status: 200\n            },\n        }\n    ];\n\n\n}\n\n\nInterceptorRegistry.register(new AuthCheckInterceptor());\n\n"],"sourceRoot":""}]}