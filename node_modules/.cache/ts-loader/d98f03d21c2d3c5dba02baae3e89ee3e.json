{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/store/modules/authToken.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/store/modules/authToken.ts","mtime":1585087862159},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kZHVydS9WU0NvZGUvT21hcnplVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgV2ViIGZyb20gJ0AvY29tcG9uZW50cy91dGlsL1dlYic7CnZhciBzdGF0ZSA9IHsKICBsb2dnZWRJbjogZmFsc2UsCiAgYXV0aFRva2VuOiBudWxsCn07CnZhciBnZXR0ZXJzID0gewogIGFwaVRva2VuOiBmdW5jdGlvbiBhcGlUb2tlbihjb250ZXh0KSB7CiAgICByZXR1cm4gY29udGV4dC5hdXRoVG9rZW47CiAgfSwKICBsb2dnZWRJbjogZnVuY3Rpb24gbG9nZ2VkSW4oY29udGV4dCkgewogICAgcmV0dXJuIGNvbnRleHQubG9nZ2VkSW47CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIGFwaVRva2VuOiBmdW5jdGlvbiBhcGlUb2tlbihjb250ZXh0LCB0b2tlbikgewogICAgY29udGV4dC5hdXRoVG9rZW4gPSB0b2tlbjsKICAgIGNvbnRleHQubG9nZ2VkSW4gPSB0cnVlOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgYXV0aGVudGljYXRlOiBmdW5jdGlvbiBhdXRoZW50aWNhdGUoY29udGV4dCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICAgICAgICAgIFdlYi5nZXQoJy9hcGkvdjEvYXV0aCcsIGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpOwogICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/store/modules/authToken.ts"],"names":[],"mappings":";;;AAAA,OAAO,GAAP,MAAgB,uBAAhB;AAGA,IAAM,KAAK,GAAG;AACV,EAAA,QAAQ,EAAE,KADA;AAEV,EAAA,SAAS,EAAE;AAFD,CAAd;AAMA,IAAM,OAAO,GAAG;AAEZ,EAAA,QAFY,oBAEH,OAFG,EAES;AACjB,WAAO,OAAO,CAAC,SAAf;AACH,GAJW;AAMZ,EAAA,QANY,oBAMH,OANG,EAMS;AACjB,WAAO,OAAO,CAAC,QAAf;AACH;AARW,CAAhB;AAaA,IAAM,SAAS,GAAG;AAEd,EAAA,QAFc,oBAEL,OAFK,EAES,KAFT,EAEsB;AAChC,IAAA,OAAO,CAAC,SAAR,GAAoB,KAApB;AACA,IAAA,OAAO,CAAC,QAAR,GAAmB,IAAnB;AACH;AALa,CAAlB;AAUA,IAAM,OAAO,GAAG;AAEN,EAAA,YAFM,wBAEO,OAFP,EAEmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACpB,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,gBAAA,GAAG,CAAC,GAAJ,CACI,cADJ,EAGI,UAAC,QAAD,EAAkB;AACd,kBAAA,OAAO,CAAC,IAAD,CAAP;AACH,iBALL,EAOI,UAAC,KAAD,EAAe;AACX,kBAAA,OAAO,CAAC,KAAD,CAAP;AACH,iBATL;AAWH,eAZM,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc9B;AAhBW,CAAhB;AAqBA,eAAe;AACX,EAAA,UAAU,EAAG,IADF;AAEX,EAAA,KAAK,EAAL,KAFW;AAGX,EAAA,OAAO,EAAP,OAHW;AAIX,EAAA,OAAO,EAAP,OAJW;AAKX,EAAA,SAAS,EAAT;AALW,CAAf","sourcesContent":["import Web from '@/components/util/Web';\n\n\nconst state = {\n    loggedIn: false,\n    authToken: null,\n};\n\n\nconst getters = {\n\n    apiToken(context: any) {\n        return context.authToken;\n    },\n\n    loggedIn(context: any) {\n        return context.loggedIn;\n    },\n\n};\n\n\nconst mutations = {\n\n    apiToken(context: any, token: string) {\n        context.authToken = token;\n        context.loggedIn = true;\n    },\n\n};\n\n\nconst actions = {\n\n    async authenticate(context: any) {\n        return new Promise((resolve, reject) => {\n            Web.get(\n                '/api/v1/auth',\n\n                (response: any) => {\n                    resolve(true);\n                },\n\n                (error: any) => {\n                    resolve(false);\n                },\n            );\n        });\n    },\n\n};\n\n\nexport default {\n    namespaced : true,\n    state,\n    getters,\n    actions,\n    mutations,\n};\n\n"],"sourceRoot":""}]}