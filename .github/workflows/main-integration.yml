name: Main Branch CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Fetching All
        run: |
          git fetch --prune --unshallow
      - name: Installing GitVersion
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        uses: gittools/actions/gitversion/setup@v0.9.3
        with:
          versionSpec: '5.3.x'
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Upgrading Version
        run: |
          RELEASE_TAG=${{ steps.gitversion.outputs.semVer }}
          echo $RELEASE_TAG > version.ver
          ls
          git config user.email ${{ secrets.GIT_EMAIL }}
          git config user.name ${{ secrets.GIT_USERNAME }}
          git add .
          git commit -m "Upgraded Version >> $RELEASE_TAG" || true
<<<<<<< HEAD
      - name: Push changes to Main
=======
      - name: Push changes
>>>>>>> 47b062e3e1446560da5a2b2a2784eb43252dde8d
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.GIT_ACCESS_TOKEN }}
<<<<<<< HEAD
      - name: Push changes to Heroku
        run: |
          git branch
          ls
          git push heroku main
=======
      - name: Set Kube Deployment Version
        run: |
          git branch
          ls
          VERSION=$(<version.ver)
          sed -i s/{{image-placeholder}}/lucky_numbers_ui:$VERSION/g kube/manifests/app/deployment.yaml
          cat kube/manifests/app/deployment.yaml
      - name: Deploying to Cluster
        uses: steebchen/kubectl@master
        env:
          KUBECTL_VERSION: "1.17"
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
        with:
          args: apply -f kube/manifests/app


  # kube-deploy:
  #   name: Deploy to Kubernetes
  #   runs-on: ubuntu-latest
  #   needs: [build]

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Fetching
  #     run: |
  #       git fetch --all
  #   - name: Merge to Main
  #     uses: devmasx/merge-branch@v1.1.0
  #     with:
  #       type: now
  #       target_branch: 'main'
  #     env:
  #       GITHUB_TOKEN: ${{secrets.GIT_ACCESS_TOKEN}}
  #   - name: Set Kube Deployment Version
  #     run: |
  #       git branch
  #       ls
  #       VERSION=$(<version.ver)
  #       sed -i s/{{image-placeholder}}/lucky_numbers_ui:$VERSION/g kube/manifests/app/deployment.yaml
  #       cat kube/manifests/app/deployment.yaml
  #   - name: Deploying to Cluster
  #     uses: steebchen/kubectl@master
  #     env:
  #       KUBECTL_VERSION: "1.17"
  #       KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
  #     with:
  #       args: apply -f kube/manifests/app

>>>>>>> 47b062e3e1446560da5a2b2a2784eb43252dde8d


  merge-develop:
    name: Merge to Develop
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Fetching
      run: |
        git fetch --all
    - name: Merge to Develop
      uses: devmasx/merge-branch@v1.1.0
      with:
        type: now
        target_branch: develop
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
<<<<<<< HEAD


=======
>>>>>>> 47b062e3e1446560da5a2b2a2784eb43252dde8d
