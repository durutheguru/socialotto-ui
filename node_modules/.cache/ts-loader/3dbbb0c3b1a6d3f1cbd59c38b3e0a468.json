{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/interceptors/InterceptorRegistry.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/interceptors/InterceptorRegistry.ts","mtime":1587758378545},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9kZHVydS9WU0NvZGUvT21hcnplVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZGR1cnUvVlNDb2RlL09tYXJ6ZVVJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBNb2NrQWRhcHRlciBmcm9tICdheGlvcy1tb2NrLWFkYXB0ZXInOwppbXBvcnQgeyBMb2cgfSBmcm9tICdAL2NvbXBvbmVudHMvdXRpbCc7Cgp2YXIgSW50ZXJjZXB0b3JSZWdpc3RyeSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEludGVyY2VwdG9yUmVnaXN0cnkoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW50ZXJjZXB0b3JSZWdpc3RyeSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoSW50ZXJjZXB0b3JSZWdpc3RyeSwgbnVsbCwgW3sKICAgIGtleTogInJlZ2lzdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlcihpbnRlcmNlcHRvcikgewogICAgICBpZiAoIXByb2Nlc3MuZW52LlZVRV9BUFBfRU5BQkxFX0lOVEVSQ0VQVE9SUykgewogICAgICAgIExvZy5pbmZvKCdJbnRlcmNlcHRvcnMgZGlzYWJsZWQuIElnbm9yaW5nIEludGVyY2VwdG9yIHJlZ2lzdGVyYXRpb24uJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGludGVyY2VwdG9yLmludGVyY2VwdENvbmZpZ3NbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgICAgICB2YXIgY29uZmlnID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgc3dpdGNoIChjb25maWcubWV0aG9kKSB7CiAgICAgICAgICAgIGNhc2UgJ0dFVCc6CiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgSW50ZXJjZXB0b3JSZWdpc3RyeS5tb2NrLm9uR2V0KEludGVyY2VwdG9yUmVnaXN0cnkuQkFTRV9VUkwgKyBjb25maWcudXJsKS5yZXBseShjb25maWcucmVzcG9uc2Uuc3RhdHVzLCBjb25maWcucmVzcG9uc2UuYm9keSwgY29uZmlnLnJlc3BvbnNlLmhlYWRlcnMpOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSAnUE9TVCc6CiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgSW50ZXJjZXB0b3JSZWdpc3RyeS5tb2NrLm9uUG9zdChJbnRlcmNlcHRvclJlZ2lzdHJ5LkJBU0VfVVJMICsgY29uZmlnLnVybCkucmVwbHkoY29uZmlnLnJlc3BvbnNlLnN0YXR1cywgY29uZmlnLnJlc3BvbnNlLmJvZHksIGNvbmZpZy5yZXNwb25zZS5oZWFkZXJzKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTsKICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuaW50ZXJjZXB0b3JzLnB1c2goaW50ZXJjZXB0b3IpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEludGVyY2VwdG9yUmVnaXN0cnk7Cn0oKTsKCmV4cG9ydCB7IEludGVyY2VwdG9yUmVnaXN0cnkgYXMgZGVmYXVsdCB9OwpJbnRlcmNlcHRvclJlZ2lzdHJ5LmludGVyY2VwdG9ycyA9IFtdOwpJbnRlcmNlcHRvclJlZ2lzdHJ5LkJBU0VfVVJMID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX1VSTDsKSW50ZXJjZXB0b3JSZWdpc3RyeS5tb2NrID0gbmV3IE1vY2tBZGFwdGVyKGF4aW9zLCB7CiAgZGVsYXlSZXNwb25zZTogMjAwMAp9KTsgLy8gY29uc3QgREVGQVVMVF9SRVNQT05TRV9JTlRFUkNFUFRPUiA9IChyZXNwb25zZTogQXhpb3NSZXNwb25zZSk6IGFueSA9PiB7Ci8vICAgICByZXR1cm4gcmVzcG9uc2U7Ci8vIH07Ci8vIGF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgoY29uZmlnOiBBeGlvc1JlcXVlc3RDb25maWcpOiBhbnkgPT4gewovLyAgICAgY29uc3QgaW50ZXJjZXB0b3IgPSBJbnRlcmNlcHRvclJlZ2lzdHJ5LmdldEludGVyY2VwdG9yQnlVcmwoY29uZmlnLnVybCk7Ci8vICAgICBpZiAocHJvY2Vzcy5lbnYuVlVFX0FQUF9FTkFCTEVfSU5URVJDRVBUT1JTICYmIGludGVyY2VwdG9yKSB7Ci8vICAgICAgICAgY29uc3QgcmVsYXRpdmVVcmxQYXRoID0gY29uZmlnLnVybCB8fCAnJzsKLy8gICAgICAgICAvLyBjb25maWcudXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MCcgKyBpbnRlcmNlcHRvci5nZXRNYXRjaGluZ1VybChyZWxhdGl2ZVVybFBhdGgpOwovLyAgICAgICAgIC8vIGF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoCi8vICAgICAgICAgLy8gICAgIERFRkFVTFRfUkVTUE9OU0VfSU5URVJDRVBUT1IsIAovLyAgICAgICAgIC8vICAgICAoZXJyb3I6IEF4aW9zRXJyb3IpID0+IHsgCi8vICAgICAgICAgLy8gICAgICAgICBpZiAoaW50ZXJjZXB0b3IuaGFzTWF0Y2hpbmdVcmwocmVsYXRpdmVVcmxQYXRoKSkgewovLyAgICAgICAgIC8vICAgICAgICAgICAgIGludGVyY2VwdG9yLnJlamVjdGVkUHJvbWlzZUhhbmRsZXIoZXJyb3IpOwovLyAgICAgICAgIC8vICAgICAgICAgfQovLyAgICAgICAgIC8vICAgICB9Ci8vICAgICAgICAgLy8gKTsKLy8gICAgIH0KLy8gICAgIHJldHVybiBjb25maWc7Ci8vIH0pOw=="},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/interceptors/InterceptorRegistry.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAP,MAAqE,OAArE;AACA,OAAO,WAAP,MAAwB,oBAAxB;AAEA,SAAS,GAAT,QAAoB,mBAApB;;IAIqB,mB;;;;;;;;;6BASM,W,EAAyB;AAC5C,UAAI,CAAC,OAAO,CAAC,GAAR,CAAY,2BAAjB,EAA8C;AAC1C,QAAA,GAAG,CAAC,IAAJ,CAAS,4DAAT;AACA;AACH;;AAJ2C;AAAA;AAAA;;AAAA;AAM5C,6BAAqB,WAAW,CAAC,gBAAjC,8HAAmD;AAAA,cAAxC,MAAwC;;AAC/C,kBAAQ,MAAM,CAAC,MAAf;AACI,iBAAK,KAAL;AAAY;AACR,gBAAA,mBAAmB,CAAC,IAApB,CACK,KADL,CACW,mBAAmB,CAAC,QAApB,GAA+B,MAAM,CAAC,GADjD,EAEK,KAFL,CAGQ,MAAM,CAAC,QAAP,CAAgB,MAHxB,EAIQ,MAAM,CAAC,QAAP,CAAgB,IAJxB,EAKQ,MAAM,CAAC,QAAP,CAAgB,OALxB;AAOA;AACH;;AAED,iBAAK,MAAL;AAAa;AACT,gBAAA,mBAAmB,CAAC,IAApB,CACK,MADL,CACY,mBAAmB,CAAC,QAApB,GAA+B,MAAM,CAAC,GADlD,EAEK,KAFL,CAGQ,MAAM,CAAC,QAAP,CAAgB,MAHxB,EAIQ,MAAM,CAAC,QAAP,CAAgB,IAJxB,EAKQ,MAAM,CAAC,QAAP,CAAgB,OALxB;AAOA;AACH;AArBL;AAuBH;AA9B2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgC5C,WAAK,YAAL,CAAkB,IAAlB,CAAuB,WAAvB;AACH;;;;;;SA1CgB,mB;AAEH,mBAAA,CAAA,YAAA,GAA+B,EAA/B;AAEA,mBAAA,CAAA,QAAA,GAAmB,OAAO,CAAC,GAAR,CAAY,gBAA/B;AAEC,mBAAA,CAAA,IAAA,GAAoB,IAAI,WAAJ,CAAgB,KAAhB,EAAuB;AAAE,EAAA,aAAa,EAAE;AAAjB,CAAvB,CAApB,C,CAyDnB;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["import axios, { AxiosResponse, AxiosRequestConfig, AxiosError } from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\n\nimport { Log } from '@/components/util';\nimport IInterceptor from './IInterceptor';\n\n\nexport default class InterceptorRegistry {\n\n    public static interceptors: IInterceptor[] = [];\n\n    public static BASE_URL: string = process.env.VUE_APP_BASE_URL;\n\n    private static mock: MockAdapter = new MockAdapter(axios, { delayResponse: 2000 });\n\n\n    public static register(interceptor: IInterceptor) {\n        if (!process.env.VUE_APP_ENABLE_INTERCEPTORS) {\n            Log.info('Interceptors disabled. Ignoring Interceptor registeration.');\n            return;\n        }\n\n        for (const config of interceptor.interceptConfigs) {\n            switch (config.method) {\n                case 'GET': {\n                    InterceptorRegistry.mock\n                        .onGet(InterceptorRegistry.BASE_URL + config.url)\n                        .reply(\n                            config.response.status, \n                            config.response.body,\n                            config.response.headers\n                        );\n                    break;\n                }\n\n                case 'POST': {\n                    InterceptorRegistry.mock\n                        .onPost(InterceptorRegistry.BASE_URL + config.url)\n                        .reply(\n                            config.response.status, \n                            config.response.body,\n                            config.response.headers\n                        );\n                    break;\n                }\n            }\n        }\n\n        this.interceptors.push(interceptor);\n    }\n\n\n    // public static getInterceptorByUrl(url: string | undefined): IInterceptor | undefined {\n    //     if (!url) {\n    //         return;\n    //     }\n\n    //     for (const i of InterceptorRegistry.interceptors) {\n    //         for (const u of i.interceptConfigs) {\n    //             if (url.indexOf(u.url) > -1) {\n    //                 return i;\n    //             }\n    //         }\n    //     }\n    // }\n\n\n}\n\n\n// const DEFAULT_RESPONSE_INTERCEPTOR = (response: AxiosResponse): any => {\n//     return response;\n// };\n\n\n// axios.interceptors.request.use((config: AxiosRequestConfig): any => {\n//     const interceptor = InterceptorRegistry.getInterceptorByUrl(config.url);\n\n//     if (process.env.VUE_APP_ENABLE_INTERCEPTORS && interceptor) {\n//         const relativeUrlPath = config.url || '';\n//         // config.url = 'http://localhost:0' + interceptor.getMatchingUrl(relativeUrlPath);\n\n//         // axios.interceptors.response.use(\n//         //     DEFAULT_RESPONSE_INTERCEPTOR, \n//         //     (error: AxiosError) => { \n//         //         if (interceptor.hasMatchingUrl(relativeUrlPath)) {\n//         //             interceptor.rejectedPromiseHandler(error);\n//         //         }\n//         //     }\n//         // );\n\n//     }\n\n//     return config;\n// });\n\n\n"],"sourceRoot":""}]}