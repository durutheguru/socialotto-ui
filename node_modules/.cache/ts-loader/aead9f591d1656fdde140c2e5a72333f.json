{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/router/util/include/service-worker/index.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/router/util/include/service-worker/index.ts","mtime":1595891082477},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGVhdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCB7IExvZywgV2ViLCBVdGlsIH0gZnJvbSAnQC9jb21wb25lbnRzL3V0aWwnOwp2YXIgYXBwbGljYXRpb25TZXJ2ZXJQdWJsaWNLZXkgPSAnQkRaRkk0UHNpak0wSy1oUDZ2cFVGb1BCaU56LWFrTHpuR214WHNMYVpTTjRmQlVSeWhZWDZPS2Q5b0p2a19qeEE2Mzh4cVVaMFY0MmhDaXhONDI3T0tvJzsKdmFyIGlzU3Vic2NyaWJlZCA9IGZhbHNlOwp2YXIgc3dSZWdpc3RyYXRpb24gPSBudWxsOwoKZnVuY3Rpb24gdXJsQjY0VG9VaW50OEFycmF5KGJhc2U2NFN0cmluZykgewogIHZhciBwYWRkaW5nID0gJz0nLnJlcGVhdCgoNCAtIGJhc2U2NFN0cmluZy5sZW5ndGggJSA0KSAlIDQpOwogIHZhciBiYXNlNjQgPSAoYmFzZTY0U3RyaW5nICsgcGFkZGluZykucmVwbGFjZSgvXC0vZywgJysnKS5yZXBsYWNlKC9fL2csICcvJyk7CiAgdmFyIHJhd0RhdGEgPSB3aW5kb3cuYXRvYihiYXNlNjQpOwogIHZhciBvdXRwdXRBcnJheSA9IG5ldyBVaW50OEFycmF5KHJhd0RhdGEubGVuZ3RoKTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCByYXdEYXRhLmxlbmd0aDsgKytpKSB7CiAgICBvdXRwdXRBcnJheVtpXSA9IHJhd0RhdGEuY2hhckNvZGVBdChpKTsKICB9CgogIHJldHVybiBvdXRwdXRBcnJheTsKfQoKaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IgJiYgJ1B1c2hNYW5hZ2VyJyBpbiB3aW5kb3cpIHsKICBMb2cuaW5mbygnU2VydmljZSBXb3JrZXIgYW5kIFB1c2ggaXMgc3VwcG9ydGVkJyk7CiAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJy9qcy9zdy5qcycpLnRoZW4oZnVuY3Rpb24gKHN3UmVnKSB7CiAgICBMb2cuaW5mbygiU2VydmljZSBXb3JrZXIgaXMgcmVnaXN0ZXJlZCAiLmNvbmNhdChKU09OLnN0cmluZ2lmeShzd1JlZykpKTsKICAgIHN3UmVnaXN0cmF0aW9uID0gc3dSZWc7CiAgICBpbml0aWFsaXplVUkoKTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIExvZy5pbmZvKCJTZXJ2aWNlIFdvcmtlciBFcnJvciAiLmNvbmNhdChKU09OLnN0cmluZ2lmeShlcnJvcikpKTsKICB9KTsKfSBlbHNlIHsKICBMb2cuaW5mbygnUHVzaCBtZXNzYWdpbmcgaXMgbm90IHN1cHBvcnRlZCcpOyAvLyBUT0RPOiBpbXBsZW1lbnQgZmFsbC1iYWNrLCByZWdpc3RlciBmb3IgU1NFCn0KCmZ1bmN0aW9uIGluaXRpYWxpemVVSSgpIHsKICAvLyBTZXQgdGhlIGluaXRpYWwgc3Vic2NyaXB0aW9uIHZhbHVlCiAgc3dSZWdpc3RyYXRpb24ucHVzaE1hbmFnZXIuZ2V0U3Vic2NyaXB0aW9uKCkudGhlbihmdW5jdGlvbiAoc3Vic2NyaXB0aW9uKSB7CiAgICBpc1N1YnNjcmliZWQgPSAhKHN1YnNjcmlwdGlvbiA9PT0gbnVsbCk7CiAgICB1cGRhdGVTdWJzY3JpcHRpb25PblNlcnZlcihzdWJzY3JpcHRpb24pOwoKICAgIGlmIChpc1N1YnNjcmliZWQpIHsKICAgICAgTG9nLmluZm8oJ1VzZXIgSVMgc3Vic2NyaWJlZC4nKTsKICAgIH0gZWxzZSB7CiAgICAgIExvZy5pbmZvKCdVc2VyIElTIE5PVCBzdWJzY3JpYmVkLicpOwogICAgICBzdWJzY3JpYmVVc2VyKCk7CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIHN1YnNjcmliZVVzZXIoKSB7CiAgdmFyIGFwcGxpY2F0aW9uU2VydmVyS2V5ID0gdXJsQjY0VG9VaW50OEFycmF5KGFwcGxpY2F0aW9uU2VydmVyUHVibGljS2V5KTsKICBzd1JlZ2lzdHJhdGlvbi5wdXNoTWFuYWdlci5zdWJzY3JpYmUoewogICAgdXNlclZpc2libGVPbmx5OiB0cnVlLAogICAgYXBwbGljYXRpb25TZXJ2ZXJLZXk6IGFwcGxpY2F0aW9uU2VydmVyS2V5CiAgfSkudGhlbihmdW5jdGlvbiAoc3Vic2NyaXB0aW9uKSB7CiAgICBMb2cuaW5mbygnVXNlciBpcyBzdWJzY3JpYmVkLicpOwogICAgdXBkYXRlU3Vic2NyaXB0aW9uT25TZXJ2ZXIoc3Vic2NyaXB0aW9uKTsKICAgIGlzU3Vic2NyaWJlZCA9IHRydWU7CiAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICBMb2cuaW5mbygiRmFpbGVkIHRvIHN1YnNjcmliZSB0aGUgdXNlcjogIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoZXJyb3IpKSk7CiAgfSk7Cn0KCmZ1bmN0aW9uIHVwZGF0ZVN1YnNjcmlwdGlvbk9uU2VydmVyKHN1YnNjcmlwdGlvbikgewogIC8vIFRPRE86IFNlbmQgc3Vic2NyaXB0aW9uIHRvIGFwcGxpY2F0aW9uIHNlcnZlcgogIExvZy5pbmZvKCJTdWJzY3JpcHRpb246ICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHN1YnNjcmlwdGlvbikpKTsKICBzdWJzY3JpcHRpb24gPSBVdGlsLnJlZnJlc2goc3Vic2NyaXB0aW9uKTsKCiAgaWYgKHN1YnNjcmlwdGlvbikgewogICAgTG9nLmluZm8oJ1N1YnNjcmlwdGlvbiBhdmFpbGFibGUuIENhbGxpbmcgU2VydmVyLicpOwogICAgV2ViLnBvc3QoJy9hcGkvdjEvbm90aWZpY2F0aW9uX3N1YnNjcmlwdGlvbicsIHsKICAgICAgZW5kcG9pbnQ6IHN1YnNjcmlwdGlvbi5lbmRwb2ludCwKICAgICAgcHVibGljS2V5OiBzdWJzY3JpcHRpb24ua2V5cy5wMjU2ZGgsCiAgICAgIGF1dGhUb2tlbjogc3Vic2NyaXB0aW9uLmtleXMuYXV0aAogICAgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIExvZy5pbmZvKCdTdWJzY3JpcHRpb24gc3VjY2Vzc2Z1bGx5IHBvc3RlZCB0byBzZXJ2ZXIuJyk7CiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgTG9nLmluZm8oJ1N1YnNjcmlwdGlvbiBmYWlsZWQgb24gcG9zdGluZyB0byBzZXJ2ZXIuJyk7CiAgICB9KTsKICB9IGVsc2UgewogICAgTG9nLmluZm8oJ05vIHN1YnNjcmlwdGlvbiBhdmFpbGFibGUuIEF0dGVtcHRpbmcgU1NFIFN1YnNjcmlwdGlvbi4nKTsKICAgIFdlYi5zc2UoJy9ldmVudHMtc3RyZWFtcy92MS9ub3RpZmljYXRpb24nLCB7CiAgICAgIG5vdGlmaWNhdGlvbjogZnVuY3Rpb24gbm90aWZpY2F0aW9uKGV2ZW50KSB7CiAgICAgICAgTG9nLmluZm8oIlJlY2VpdmVkIFNlcnZlciBTZW50IE5vdGlmaWNhdGlvbi4gIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoZXZlbnQpKSk7CiAgICAgIH0KICAgIH0sIGZ1bmN0aW9uIChldmVudCkgewogICAgICBMb2cuaW5mbygiUmVjZWl2ZWQgU2VydmVyIFNlbnQgTWVzc2FnZS4gIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoZXZlbnQpKSk7CiAgICB9KTsKICB9Cn0="},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/router/util/include/service-worker/index.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { Log, Web, Util } from '@/components/util';\n\n\nconst applicationServerPublicKey = \n    'BDZFI4PsijM0K-hP6vpUFoPBiNz-akLznGmxXsLaZSN4fBURyhYX6OKd9oJvk_jxA638xqUZ0V42hCixN427OKo';\n\nlet isSubscribed: boolean = false;\nlet swRegistration: any = null;\n\nfunction urlB64ToUint8Array(base64String: string) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n}\n\n\nif ('serviceWorker' in navigator && 'PushManager' in window) {\n    Log.info('Service Worker and Push is supported');\n\n    navigator\n        .serviceWorker.register('/js/sw.js')\n        .then(\n            (swReg: ServiceWorkerRegistration) => {\n                Log.info(`Service Worker is registered ${JSON.stringify(swReg)}`);\n\n                swRegistration = swReg;\n                initializeUI();\n            }\n        )\n        .catch(\n            (error: any) => {\n                Log.info(`Service Worker Error ${JSON.stringify(error)}`);\n            }\n        );\n} else {\n    Log.info('Push messaging is not supported');\n    // TODO: implement fall-back, register for SSE\n}\n\n\nfunction initializeUI() {\n    // Set the initial subscription value\n    swRegistration\n    .pushManager\n    .getSubscription()\n    .then(\n        (subscription: any) => {\n            isSubscribed = !(subscription === null);\n\n            updateSubscriptionOnServer(subscription);\n\n            if (isSubscribed) {\n                Log.info('User IS subscribed.');\n            } else {\n                Log.info('User IS NOT subscribed.');\n                subscribeUser();\n            }\n        }\n    );\n}\n\n\nfunction subscribeUser() {\n    const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\n\n    swRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey,\n    })\n    .then(\n        (subscription: any) => {\n            Log.info('User is subscribed.');\n\n            updateSubscriptionOnServer(subscription);\n\n            isSubscribed = true;\n        }\n    )\n    .catch(\n        (error: any) => {\n            Log.info(`Failed to subscribe the user: ${JSON.stringify(error)}`);\n        }\n    );\n}\n\n\nfunction updateSubscriptionOnServer(subscription: {endpoint: string, keys: any}) {\n    // TODO: Send subscription to application server\n\n    Log.info(`Subscription: ${JSON.stringify(subscription)}`);\n    subscription = Util.refresh(subscription);\n\n    if (subscription) {\n        Log.info('Subscription available. Calling Server.');\n        \n        Web.post(\n            '/api/v1/notification_subscription',\n\n            {\n                endpoint: subscription.endpoint,\n                publicKey: subscription.keys.p256dh,\n                authToken: subscription.keys.auth,\n            },\n\n            (response) => {\n                Log.info('Subscription successfully posted to server.');\n            },\n\n            (error) => {\n                Log.info('Subscription failed on posting to server.');\n            }\n        );\n    } else {\n        Log.info('No subscription available. Attempting SSE Subscription.');\n\n        Web.sse(\n            '/events-streams/v1/notification',\n\n            {\n                notification: (event: any)  => {\n                    Log.info(`Received Server Sent Notification. ${JSON.stringify(event)}`);\n                }\n            },\n\n            (event: any) => {\n                Log.info(`Received Server Sent Message. ${JSON.stringify(event)}`);\n            }\n        );\n    }\n}\n\n\n\n\n\n"],"sourceRoot":""}]}