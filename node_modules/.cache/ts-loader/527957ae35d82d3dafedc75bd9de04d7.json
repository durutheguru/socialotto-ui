{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/interceptors/login/LoginInterceptor.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/interceptors/login/LoginInterceptor.ts","mtime":1587761967267},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZGR1cnUvVlNDb2RlL09tYXJ6ZVVJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2RkdXJ1L1ZTQ29kZS9PbWFyemVVSS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9kZHVydS9WU0NvZGUvT21hcnplVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IHsgZGVmYXVsdCBhcyBkYXRhIH0gZnJvbSAnQC9pbnRlcmNlcHRvcnMvbG9naW4vbG9naW4tcmVzcG9uc2VzLmpzb24nOwppbXBvcnQgQmFzZUludGVyY2VwdG9yIGZyb20gJy4uL0Jhc2VJbnRlcmNlcHRvcic7CmltcG9ydCBJbnRlcmNlcHRvclJlZ2lzdHJ5IGZyb20gJy4uL0ludGVyY2VwdG9yUmVnaXN0cnknOwoKdmFyIExvZ2luSW50ZXJjZXB0b3IgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9CYXNlSW50ZXJjZXB0b3IpIHsKICBfaW5oZXJpdHMoTG9naW5JbnRlcmNlcHRvciwgX0Jhc2VJbnRlcmNlcHRvcik7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTG9naW5JbnRlcmNlcHRvcik7CgogIGZ1bmN0aW9uIExvZ2luSW50ZXJjZXB0b3IoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvZ2luSW50ZXJjZXB0b3IpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5pbnRlcmNlcHRDb25maWdzID0gW3sKICAgICAgdXJsOiAnL2xvZ2luJywKICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgIHJlc3BvbnNlOiBkYXRhLmRlZmF1bHQKICAgIH1dOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgcmV0dXJuIExvZ2luSW50ZXJjZXB0b3I7Cn0oQmFzZUludGVyY2VwdG9yKTsKCmV4cG9ydCB7IExvZ2luSW50ZXJjZXB0b3IgYXMgZGVmYXVsdCB9OwpJbnRlcmNlcHRvclJlZ2lzdHJ5LnJlZ2lzdGVyKG5ldyBMb2dpbkludGVyY2VwdG9yKCkpOw=="},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/interceptors/login/LoginInterceptor.ts"],"names":[],"mappings":";;;AACA,SAAQ,OAAO,IAAI,IAAnB,QAA8B,2CAA9B;AACA,OAAO,eAAP,MAA4B,oBAA5B;AACA,OAAO,mBAAP,MAAgC,wBAAhC;;IAIqB,gB;;;;;AAArB,8BAAA;AAAA;;AAAA;;;AAGW,UAAA,gBAAA,GAAsC,CACzC;AACI,MAAA,GAAG,EAAE,QADT;AAEI,MAAA,MAAM,EAAE,MAFZ;AAGI,MAAA,QAAQ,EAAI,IAAY,CAAC;AAH7B,KADyC,CAAtC;AAHX;AAYC;;;EAZ6C,e;;SAAzB,gB;AAerB,mBAAmB,CAAC,QAApB,CAA6B,IAAI,gBAAJ,EAA7B","sourcesContent":["import InterceptConfig, { InterceptResponse } from '@/interceptors/InterceptConfig';\nimport {default as data} from '@/interceptors/login/login-responses.json';\nimport BaseInterceptor from '../BaseInterceptor';\nimport InterceptorRegistry from '../InterceptorRegistry';\n\n\n\nexport default class LoginInterceptor extends BaseInterceptor {\n\n\n    public interceptConfigs: InterceptConfig[] = [\n        {\n            url: '/login',\n            method: 'POST',\n            response: ((data as any).default as InterceptResponse)\n        }\n    ];\n\n\n}\n\n\nInterceptorRegistry.register(new LoginInterceptor());\n\n"],"sourceRoot":""}]}