{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/interceptors/BaseInterceptor.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/interceptors/BaseInterceptor.ts","mtime":1587502326015},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZGR1cnUvVlNDb2RlL09tYXJ6ZVVJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2RkdXJ1L1ZTQ29kZS9PbWFyemVVSS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKdmFyIEJhc2VJbnRlcmNlcHRvciA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEJhc2VJbnRlcmNlcHRvcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCYXNlSW50ZXJjZXB0b3IpOwoKICAgIHRoaXMuaW50ZXJjZXB0Q29uZmlncyA9IFtdOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEJhc2VJbnRlcmNlcHRvciwgW3sKICAgIGtleTogInJlamVjdGVkUHJvbWlzZUhhbmRsZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlamVjdGVkUHJvbWlzZUhhbmRsZXIoZXJyb3IpIHsKICAgICAgdmFyIF9lcnJvciRjb25maWc7CgogICAgICBlcnJvci5jb25maWcudXJsID0gZXJyb3IuY29uZmlnLnVybCB8fCAnJzsKICAgICAgdmFyIGludGVyY2VwdCA9IHRoaXMuZ2V0TWF0Y2hpbmdJbnRlcmNlcHRDb25maWcoKF9lcnJvciRjb25maWcgPSBlcnJvci5jb25maWcpID09PSBudWxsIHx8IF9lcnJvciRjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lcnJvciRjb25maWcudXJsKTsKCiAgICAgIGlmIChpbnRlcmNlcHQpIHsKICAgICAgICB2YXIgYm9keSA9IGludGVyY2VwdC5yZXNwb25zZS5kZWZhdWx0LmJvZHk7CiAgICAgICAgdmFyIGhlYWRlcnMgPSBpbnRlcmNlcHQucmVzcG9uc2UuZGVmYXVsdC5oZWFkZXJzOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoewogICAgICAgICAgc3RhdHVzOiAyMDAsCiAgICAgICAgICBzdGF0dXNUZXh0OiAnT0snLAogICAgICAgICAgZGF0YTogYm9keSwKICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsCiAgICAgICAgICBjb25maWc6IGVycm9yLmNvbmZpZwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0TWF0Y2hpbmdVcmwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE1hdGNoaW5nVXJsKHVybCkgewogICAgICB2YXIgaW50ZXJjZXB0ID0gdGhpcy5nZXRNYXRjaGluZ0ludGVyY2VwdENvbmZpZyh1cmwpOwoKICAgICAgaWYgKGludGVyY2VwdCkgewogICAgICAgIHJldHVybiBpbnRlcmNlcHQudXJsOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiaGFzTWF0Y2hpbmdVcmwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhhc01hdGNoaW5nVXJsKHVybCkgewogICAgICB2YXIgaW50ZXJjZXB0ID0gdGhpcy5nZXRNYXRjaGluZ0ludGVyY2VwdENvbmZpZyh1cmwpOwogICAgICByZXR1cm4gISFpbnRlcmNlcHQ7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0TWF0Y2hpbmdJbnRlcmNlcHRDb25maWciLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE1hdGNoaW5nSW50ZXJjZXB0Q29uZmlnKHVybCkgewogICAgICB2YXIgaW50ZXJjZXB0ID0gdGhpcy5pbnRlcmNlcHRDb25maWdzLmZpbHRlcihmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgICAgcmV0dXJuIHVybC5pbmRleE9mKGNvbmZpZy51cmwpID4gLTE7CiAgICAgIH0pOwoKICAgICAgaWYgKGludGVyY2VwdC5sZW5ndGgpIHsKICAgICAgICByZXR1cm4gaW50ZXJjZXB0WzBdOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICB9XSk7CgogIHJldHVybiBCYXNlSW50ZXJjZXB0b3I7Cn0oKTsKCmV4cG9ydCB7IEJhc2VJbnRlcmNlcHRvciBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/interceptors/BaseInterceptor.ts"],"names":[],"mappings":";;;;;;IAMqB,e;;;AAArB,6BAAA;AAAA;;AAGW,SAAA,gBAAA,GAAsC,EAAtC;AAiDV;;;;2CA9CiC,K,EAAiB;AAAA;;AAC3C,MAAA,KAAK,CAAC,MAAN,CAAa,GAAb,GAAmB,KAAK,CAAC,MAAN,CAAa,GAAb,IAAoB,EAAvC;AACA,UAAM,SAAS,GAAG,KAAK,0BAAL,kBAAgC,KAAK,CAAC,MAAtC,kDAAgC,cAAc,GAA9C,CAAlB;;AAEA,UAAI,SAAJ,EAAe;AACX,YAAM,IAAI,GAAI,SAAS,CAAC,QAAV,CAA2B,OAA3B,CAAmC,IAAjD;AACA,YAAM,OAAO,GAAI,SAAS,CAAC,QAAV,CAA2B,OAA3B,CAAmC,OAApD;AAEA,eAAO,OAAO,CAAC,OAAR,CAAgB;AACnB,UAAA,MAAM,EAAE,GADW;AAEnB,UAAA,UAAU,EAAE,IAFO;AAGnB,UAAA,IAAI,EAAE,IAHa;AAInB,UAAA,OAAO,EAAP,OAJmB;AAKnB,UAAA,MAAM,EAAE,KAAK,CAAC;AALK,SAAhB,CAAP;AAOH;AACJ;;;mCAGqB,G,EAAW;AAC7B,UAAM,SAAS,GAAG,KAAK,0BAAL,CAAgC,GAAhC,CAAlB;;AACA,UAAI,SAAJ,EAAe;AACX,eAAO,SAAS,CAAC,GAAjB;AACH;AACJ;;;mCAGqB,G,EAAW;AAC7B,UAAM,SAAS,GAAG,KAAK,0BAAL,CAAgC,GAAhC,CAAlB;AACA,aAAO,CAAC,CAAC,SAAT;AACH;;;+CAGkC,G,EAAW;AAC1C,UAAM,SAAS,GAAG,KAAK,gBAAL,CAAsB,MAAtB,CAA6B,UAAC,MAAD,EAA4B;AACvE,eAAO,GAAG,CAAC,OAAJ,CAAY,MAAM,CAAC,GAAnB,IAA0B,CAAC,CAAlC;AACH,OAFiB,CAAlB;;AAIA,UAAI,SAAS,CAAC,MAAd,EAAsB;AAClB,eAAO,SAAS,CAAC,CAAD,CAAhB;AACH;;AAED,aAAO,IAAP;AACH;;;;;;SAjDgB,e","sourcesContent":["import { AxiosError } from 'axios';\nimport IInterceptor from './IInterceptor';\nimport InterceptConfig from '@/interceptors/InterceptConfig';\n\n\n\nexport default class BaseInterceptor implements IInterceptor {\n\n\n    public interceptConfigs: InterceptConfig[] = [];\n\n\n    public rejectedPromiseHandler(error: AxiosError): any {\n        error.config.url = error.config.url || '';\n        const intercept = this.getMatchingInterceptConfig(error.config?.url);\n    \n        if (intercept) {\n            const body = (intercept.response as any).default.body;\n            const headers = (intercept.response as any).default.headers;\n    \n            return Promise.resolve({\n                status: 200,\n                statusText: 'OK',\n                data: body,\n                headers,\n                config: error.config\n            });\n        }\n    }\n\n\n    public getMatchingUrl(url: string): string | undefined {\n        const intercept = this.getMatchingInterceptConfig(url);\n        if (intercept) {\n            return intercept.url;\n        }\n    }\n\n\n    public hasMatchingUrl(url: string): boolean {\n        const intercept = this.getMatchingInterceptConfig(url);\n        return !!intercept;\n    }\n\n\n    private getMatchingInterceptConfig(url: string): InterceptConfig | null {\n        const intercept = this.interceptConfigs.filter((config: InterceptConfig) => {\n            return url.indexOf(config.url) > -1;\n        });\n\n        if (intercept.length) {\n            return intercept[0];\n        }\n        \n        return null;\n    }\n\n\n}\n\n\n\n"],"sourceRoot":""}]}