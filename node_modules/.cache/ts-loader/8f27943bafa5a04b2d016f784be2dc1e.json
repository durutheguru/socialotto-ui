{"remainingRequest":"/Users/dduru/IdeaProjects/Private/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/IdeaProjects/Private/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/IdeaProjects/Private/OmarzeUI/src/router/util/guard.ts","dependencies":[{"path":"/Users/dduru/IdeaProjects/Private/OmarzeUI/src/router/util/guard.ts","mtime":1584578461508},{"path":"/Users/dduru/IdeaProjects/Private/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/IdeaProjects/Private/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/IdeaProjects/Private/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2RkdXJ1L0lkZWFQcm9qZWN0cy9Qcml2YXRlL09tYXJ6ZVVJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHN0b3JlIGZyb20gJy4uLy4uL3N0b3JlJzsKaW1wb3J0IFV0aWwgZnJvbSAnLi4vLi4vY29tcG9uZW50cy91dGlsL1V0aWwnOwoKdmFyIG5hdmlnYXRlTG9naW4gPSBmdW5jdGlvbiBuYXZpZ2F0ZUxvZ2luKHRvLCBuZXh0KSB7CiAgc3RvcmUuY29tbWl0KCdlbnRyeVVybCcsIHRvLnBhdGgpOwogIG5leHQoJ0xvZ2luJyk7Cn07Cgp2YXIgbmF2aWdhdGVQYXRoID0gZnVuY3Rpb24gbmF2aWdhdGVQYXRoKG5leHQpIHsKICB2YXIgdXJsID0gc3RvcmUuZ2V0dGVycy5lbnRyeVVybDsKCiAgaWYgKFV0aWwuaXNWYWxpZFN0cmluZyh1cmwpKSB7CiAgICBuZXh0KHVybCk7CiAgICBzdG9yZS5jb21taXQoJ2VudHJ5VXJsJywgbnVsbCk7CiAgfSBlbHNlIHsKICAgIG5leHQoKTsKICB9Cn07CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX3JlZigpIHsKICBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciBhdXRoZW50aWNhdGVkOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpZiAoIXN0b3JlLmdldHRlcnNbJ2F1dGhUb2tlbi9sb2dnZWRJbiddKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ2F1dGhUb2tlbi9hdXRoZW50aWNhdGUnKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgaWYgKCFhdXRoZW50aWNhdGVkKSB7CiAgICAgICAgICAgICAgbmF2aWdhdGVMb2dpbih0bywgbmV4dCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgbmF2aWdhdGVQYXRoKG5leHQpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBuYXZpZ2F0ZUxvZ2luKHRvLCBuZXh0KTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["/Users/dduru/IdeaProjects/Private/OmarzeUI/src/router/util/guard.ts"],"names":[],"mappings":";;AAAA,OAAO,KAAP,MAAkB,aAAlB;AACA,OAAO,IAAP,MAAiB,4BAAjB;;AAGA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,EAAD,EAAU,IAAV,EAAuB;AACzC,EAAA,KAAK,CAAC,MAAN,CAAa,UAAb,EAAyB,EAAE,CAAC,IAA5B;AACA,EAAA,IAAI,CAAC,OAAD,CAAJ;AACH,CAHD;;AAMA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,IAAD,EAAc;AAC/B,MAAM,GAAG,GAAG,KAAK,CAAC,OAAN,CAAc,QAA1B;;AAEA,MAAI,IAAI,CAAC,aAAL,CAAmB,GAAnB,CAAJ,EAA6B;AACzB,IAAA,IAAI,CAAC,GAAD,CAAJ;AACA,IAAA,KAAK,CAAC,MAAN,CAAa,UAAb,EAAyB,IAAzB;AACH,GAHD,MAGO;AACH,IAAA,IAAI;AACP;AACJ,CATD;;AAYA;AAAA;AAAA;;;;;0BAAe,iBAAe,EAAf,EAAwB,IAAxB,EAAmC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACP,KAAK,CAAC,OAAN,CAAc,oBAAd,CADO;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEqB,KAAK,CAAC,QAAN,CAAe,wBAAf,CAFrB;;AAAA;AAED,YAAA,aAFC;;AAGP,gBAAI,CAAC,aAAL,EAAoB;AAChB,cAAA,aAAa,CAAC,EAAD,EAAK,IAAL,CAAb;AACH,aAFD,MAEO;AACH,cAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAPM;AAAA;;AAAA;AASP,YAAA,aAAa,CAAC,EAAD,EAAK,IAAL,CAAb;;AATO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import store from '../../store';\nimport Util from '../../components/util/Util';\n\n\nconst navigateLogin = (to: any, next: any) => {\n    store.commit('entryUrl', to.path);\n    next('Login');\n};\n\n\nconst navigatePath = (next: any) => {\n    const url = store.getters.entryUrl;\n\n    if (Util.isValidString(url)) {\n        next(url);\n        store.commit('entryUrl', null);\n    } else {\n        next();\n    }\n};\n\n\nexport default async function(to: any, from: any, next: any) {\n    if (store.getters['authToken/loggedIn']) {\n        const authenticated = await store.dispatch('authToken/authenticate');\n        if (!authenticated) {\n            navigateLogin(to, next);\n        } else {\n            navigatePath(next);\n        }\n    } else {\n        navigateLogin(to, next);\n    }\n}\n\n"],"sourceRoot":""}]}