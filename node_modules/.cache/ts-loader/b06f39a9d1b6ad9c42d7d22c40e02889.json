{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/components/auth/UserAuthContext.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/components/auth/UserAuthContext.ts","mtime":1594761596640},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1YiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9kZHVydS9WU0NvZGUvT21hcnplVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZGR1cnUvVlNDb2RlL09tYXJ6ZVVJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCB7IExvZywgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbCc7CmltcG9ydCBkZXNjcmlwdG9ycyBmcm9tICdAL2NvbXBvbmVudHMvYXV0aC9kZXNjcmlwdG9ycyc7Ci8qKgogKiBVc2VyQXV0aENvbnRleHQgY2xhc3MgZW5jYXBzdWxhdGVzIGFsbCB0aGUgaW5mb3JtYXRpb24ga25vd24gYWJvdXQKICogYSB1c2VyIG9uIHN1Y2Nlc3NmdWwgYXV0aG9yaXNhdGlvbi4uCiAqLwoKdmFyIFVzZXJBdXRoQ29udGV4dCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFVzZXJBdXRoQ29udGV4dCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBVc2VyQXV0aENvbnRleHQpOwoKICAgIHRoaXMudXNlcm5hbWUgPSAnJzsKICAgIHRoaXMuYXV0aG9yaXphdGlvbnMgPSBbXTsKICB9CgogIF9jcmVhdGVDbGFzcyhVc2VyQXV0aENvbnRleHQsIFt7CiAgICBrZXk6ICJpbml0aWFsaXplIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0aWFsaXplKHRva2VuKSB7CiAgICAgIHZhciB0b2tlbk1hdGNoID0gdG9rZW4ubWF0Y2goQ29uc3RhbnRzLnJlZ2V4cHMuQVVUSF9UT0tFTik7CgogICAgICBpZiAodG9rZW5NYXRjaCA9PT0gbnVsbCkgewogICAgICAgIExvZy5lcnJvcignVW5hYmxlIHRvIEV4dHJhY3QgVG9rZW4gUGF5bG9hZCcpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5wcm9jZXNzVG9rZW5QYXlsb2FkKHRva2VuTWF0Y2hbMV0pOwogICAgfQogIH0sIHsKICAgIGtleTogImhvbWVVcmwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhvbWVVcmwoKSB7CiAgICAgIHZhciBhdXRoQ29udGV4dCA9IHRoaXMuYXV0aENvbnRleHQoKTsKCiAgICAgIGlmIChhdXRoQ29udGV4dCA9PT0gbnVsbCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgcmV0dXJuIGF1dGhDb250ZXh0LmhvbWVVcmw7CiAgICB9CiAgfSwgewogICAga2V5OiAiYXV0aENvbnRleHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGF1dGhDb250ZXh0KCkgewogICAgICB2YXIgY29udGV4dERlc2NyaXB0b3IgPSBudWxsOwogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGRlc2NyaXB0b3JzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkgewogICAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICBpZiAodGhpcy5oYXNBdXRob3JpemF0aW9uKGRlc2NyaXB0b3IubmFtZSkpIHsKICAgICAgICAgICAgY29udGV4dERlc2NyaXB0b3IgPSBkZXNjcmlwdG9yOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlOwogICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTsKICAgICAgICAgIH0KICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7CiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGNvbnRleHREZXNjcmlwdG9yOwogICAgfQogIH0sIHsKICAgIGtleTogImhhc0F1dGhvcml6YXRpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhhc0F1dGhvcml6YXRpb24oYXV0aG9yaXphdGlvbikgewogICAgICByZXR1cm4gdGhpcy5hdXRob3JpemF0aW9ucy5sZW5ndGggPiAwICYmIHRoaXMuYXV0aG9yaXphdGlvbnMuaW5kZXhPZihhdXRob3JpemF0aW9uKSA+IC0xOwogICAgfQogIH0sIHsKICAgIGtleTogInByb2Nlc3NUb2tlblBheWxvYWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHByb2Nlc3NUb2tlblBheWxvYWQocGF5bG9hZCkgewogICAgICBwYXlsb2FkID0gYXRvYihwYXlsb2FkKTsKICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHBheWxvYWQpOwogICAgICB0aGlzLnVzZXJuYW1lID0gZGF0YS5zdWI7CiAgICAgIHRoaXMuYXV0aG9yaXphdGlvbnMgPSBkYXRhLmF1dGhvcml6YXRpb25zOwogICAgfQogIH1dLCBbewogICAga2V5OiAiZ2V0SW5zdGFuY2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEluc3RhbmNlKCkgewogICAgICBpZiAoVXNlckF1dGhDb250ZXh0Lmluc3RhbmNlID09PSBudWxsKSB7CiAgICAgICAgTG9nLmluZm8oJ0NyZWF0aW5nIE5ldyBVc2VyQXV0aENvbnRleHQgaW5zdGFuY2UnKTsKICAgICAgICBVc2VyQXV0aENvbnRleHQuaW5zdGFuY2UgPSBuZXcgVXNlckF1dGhDb250ZXh0KCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBVc2VyQXV0aENvbnRleHQuaW5zdGFuY2U7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVzdHJveSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveSgpIHsKICAgICAgZGVsZXRlIFVzZXJBdXRoQ29udGV4dC5pbnN0YW5jZTsKICAgIH0KICB9XSk7CgogIHJldHVybiBVc2VyQXV0aENvbnRleHQ7Cn0oKTsKCmV4cG9ydCB7IFVzZXJBdXRoQ29udGV4dCBhcyBkZWZhdWx0IH07ClVzZXJBdXRoQ29udGV4dC5pbnN0YW5jZSA9IG51bGw7"},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/components/auth/UserAuthContext.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,SAAS,GAAT,EAAc,SAAd,QAA+B,SAA/B;AAEA,OAAO,WAAP,MAAwB,+BAAxB;AAGA;;;;;IAIqB,e;;;AAArB,6BAAA;AAAA;;AAoBY,SAAA,QAAA,GAAmB,EAAnB;AAGA,SAAA,cAAA,GAA2B,EAA3B;AAkDX;;;;+BA/CqB,K,EAAa;AAC3B,UAAM,UAAU,GAAG,KAAK,CAAC,KAAN,CAAY,SAAS,CAAC,OAAV,CAAkB,UAA9B,CAAnB;;AACA,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACrB,QAAA,GAAG,CAAC,KAAJ,CAAU,iCAAV;AACA;AACH;;AAED,WAAK,mBAAL,CAAyB,UAAU,CAAC,CAAD,CAAnC;AACH;;;8BAGa;AACV,UAAM,WAAW,GAAG,KAAK,WAAL,EAApB;;AACA,UAAI,WAAW,KAAK,IAApB,EAA0B;AACtB,eAAO,EAAP;AACH;;AAED,aAAO,WAAW,CAAC,OAAnB;AACH;;;kCAGiB;AACd,UAAI,iBAAiB,GAAiC,IAAtD;AADc;AAAA;AAAA;;AAAA;AAGd,6BAAyB,WAAzB,8HAAsC;AAAA,cAA3B,UAA2B;;AAClC,cAAI,KAAK,gBAAL,CAAsB,UAAU,CAAC,IAAjC,CAAJ,EAA4C;AACxC,YAAA,iBAAiB,GAAG,UAApB;AACH;AACJ;AAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASd,aAAO,iBAAP;AACH;;;qCAGuB,a,EAAqB;AACzC,aAAQ,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAA9B,IAAqC,KAAK,cAAL,CAAoB,OAApB,CAA4B,aAA5B,IAA6C,CAAC,CAA1F;AACH;;;wCAG2B,O,EAAe;AACvC,MAAA,OAAO,GAAG,IAAI,CAAC,OAAD,CAAd;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,OAAX,CAAb;AAEA,WAAK,QAAL,GAAgB,IAAI,CAAC,GAArB;AACA,WAAK,cAAL,GAAsB,IAAI,CAAC,cAA3B;AACH;;;kCAlEwB;AACrB,UAAI,eAAe,CAAC,QAAhB,KAA6B,IAAjC,EAAuC;AACnC,QAAA,GAAG,CAAC,IAAJ,CAAS,uCAAT;AACA,QAAA,eAAe,CAAC,QAAhB,GAA2B,IAAI,eAAJ,EAA3B;AACH;;AAED,aAAO,eAAe,CAAC,QAAvB;AACH;;;8BAGoB;AACjB,aAAO,eAAe,CAAC,QAAvB;AACH;;;;;;SAjBgB,e;AAEH,eAAA,CAAA,QAAA,GAAmC,IAAnC","sourcesContent":["import { Log, Constants } from '../util';\nimport AuthContextDescriptor from './descriptors/AuthContextDescriptor';\nimport descriptors from '@/components/auth/descriptors';\n\n\n/**\n * UserAuthContext class encapsulates all the information known about \n * a user on successful authorisation.. \n */\nexport default class UserAuthContext {\n\n    public static instance: UserAuthContext | null = null;\n\n\n    public static getInstance(): UserAuthContext {\n        if (UserAuthContext.instance === null) {\n            Log.info('Creating New UserAuthContext instance');\n            UserAuthContext.instance = new UserAuthContext();\n        }\n\n        return UserAuthContext.instance;\n    }\n\n\n    public static destroy() {\n        delete UserAuthContext.instance;\n    }\n\n\n    private username: string = '';\n\n\n    private authorizations: string[] = [];\n\n\n    public initialize(token: string) {\n        const tokenMatch = token.match(Constants.regexps.AUTH_TOKEN);\n        if (tokenMatch === null) {\n            Log.error('Unable to Extract Token Payload');\n            return;\n        }\n\n        this.processTokenPayload(tokenMatch[1]);\n    }\n\n\n    public homeUrl(): string {\n        const authContext = this.authContext();\n        if (authContext === null) {\n            return '';\n        }\n\n        return authContext.homeUrl;\n    }\n\n\n    public authContext(): AuthContextDescriptor | null {\n        let contextDescriptor: AuthContextDescriptor | null = null;\n\n        for (const descriptor of descriptors) {\n            if (this.hasAuthorization(descriptor.name)) {\n                contextDescriptor = descriptor;\n            }\n        }\n\n        return contextDescriptor;\n    }\n\n\n    public hasAuthorization(authorization: string): boolean {\n        return (this.authorizations.length > 0) && (this.authorizations.indexOf(authorization) > -1);\n    }\n\n\n    private processTokenPayload(payload: string) {\n        payload = atob(payload);\n        const data = JSON.parse(payload);\n\n        this.username = data.sub;\n        this.authorizations = data.authorizations;\n    }\n\n}\n\n\n"],"sourceRoot":""}]}