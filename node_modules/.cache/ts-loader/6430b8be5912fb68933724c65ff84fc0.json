{"remainingRequest":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js!/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js??ref--13-2!/Users/dduru/VSCode/OmarzeUI/src/router/util/include/service-worker/index.ts","dependencies":[{"path":"/Users/dduru/VSCode/OmarzeUI/src/router/util/include/service-worker/index.ts","mtime":1595451497929},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dduru/VSCode/OmarzeUI/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGVhdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nIjsKaW1wb3J0IHsgTG9nIH0gZnJvbSAnQC9jb21wb25lbnRzL3V0aWwnOwp2YXIgYXBwbGljYXRpb25TZXJ2ZXJQdWJsaWNLZXkgPSAnQkRaRkk0UHNpak0wSy1oUDZ2cFVGb1BCaU56LWFrTHpuR214WHNMYVpTTjRmQlVSeWhZWDZPS2Q5b0p2a19qeEE2Mzh4cVVaMFY0MmhDaXhONDI3T0tvJzsKdmFyIGlzU3Vic2NyaWJlZCA9IGZhbHNlOwp2YXIgc3dSZWdpc3RyYXRpb24gPSBudWxsOwoKZnVuY3Rpb24gdXJsQjY0VG9VaW50OEFycmF5KGJhc2U2NFN0cmluZykgewogIHZhciBwYWRkaW5nID0gJz0nLnJlcGVhdCgoNCAtIGJhc2U2NFN0cmluZy5sZW5ndGggJSA0KSAlIDQpOwogIHZhciBiYXNlNjQgPSAoYmFzZTY0U3RyaW5nICsgcGFkZGluZykucmVwbGFjZSgvXC0vZywgJysnKS5yZXBsYWNlKC9fL2csICcvJyk7CiAgdmFyIHJhd0RhdGEgPSB3aW5kb3cuYXRvYihiYXNlNjQpOwogIHZhciBvdXRwdXRBcnJheSA9IG5ldyBVaW50OEFycmF5KHJhd0RhdGEubGVuZ3RoKTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCByYXdEYXRhLmxlbmd0aDsgKytpKSB7CiAgICBvdXRwdXRBcnJheVtpXSA9IHJhd0RhdGEuY2hhckNvZGVBdChpKTsKICB9CgogIHJldHVybiBvdXRwdXRBcnJheTsKfQoKaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IgJiYgJ1B1c2hNYW5hZ2VyJyBpbiB3aW5kb3cpIHsKICBMb2cuaW5mbygnU2VydmljZSBXb3JrZXIgYW5kIFB1c2ggaXMgc3VwcG9ydGVkJyk7CiAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJ3N3LmpzJykudGhlbihmdW5jdGlvbiAoc3dSZWcpIHsKICAgIExvZy5pbmZvKCJTZXJ2aWNlIFdvcmtlciBpcyByZWdpc3RlcmVkICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHN3UmVnKSkpOwogICAgc3dSZWdpc3RyYXRpb24gPSBzd1JlZzsKICAgIGluaXRpYWxpemVVSSgpOwogIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgTG9nLmluZm8oIlNlcnZpY2UgV29ya2VyIEVycm9yICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KGVycm9yKSkpOwogIH0pOwp9IGVsc2UgewogIExvZy5pbmZvKCdQdXNoIG1lc3NhZ2luZyBpcyBub3Qgc3VwcG9ydGVkJyk7IC8vIFRPRE86IGltcGxlbWVudCBmYWxsLWJhY2sKfQoKZnVuY3Rpb24gaW5pdGlhbGl6ZVVJKCkgewogIC8vIFNldCB0aGUgaW5pdGlhbCBzdWJzY3JpcHRpb24gdmFsdWUKICBzd1JlZ2lzdHJhdGlvbi5wdXNoTWFuYWdlci5nZXRTdWJzY3JpcHRpb24oKS50aGVuKGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHsKICAgIGlzU3Vic2NyaWJlZCA9ICEoc3Vic2NyaXB0aW9uID09PSBudWxsKTsKICAgIHVwZGF0ZVN1YnNjcmlwdGlvbk9uU2VydmVyKHN1YnNjcmlwdGlvbik7CgogICAgaWYgKGlzU3Vic2NyaWJlZCkgewogICAgICBMb2cuaW5mbygnVXNlciBJUyBzdWJzY3JpYmVkLicpOwogICAgfSBlbHNlIHsKICAgICAgTG9nLmluZm8oJ1VzZXIgSVMgTk9UIHN1YnNjcmliZWQuJyk7CiAgICAgIHN1YnNjcmliZVVzZXIoKTsKICAgIH0KICB9KTsKfQoKZnVuY3Rpb24gc3Vic2NyaWJlVXNlcigpIHsKICB2YXIgYXBwbGljYXRpb25TZXJ2ZXJLZXkgPSB1cmxCNjRUb1VpbnQ4QXJyYXkoYXBwbGljYXRpb25TZXJ2ZXJQdWJsaWNLZXkpOwogIHN3UmVnaXN0cmF0aW9uLnB1c2hNYW5hZ2VyLnN1YnNjcmliZSh7CiAgICB1c2VyVmlzaWJsZU9ubHk6IHRydWUsCiAgICBhcHBsaWNhdGlvblNlcnZlcktleTogYXBwbGljYXRpb25TZXJ2ZXJLZXkKICB9KS50aGVuKGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHsKICAgIExvZy5pbmZvKCdVc2VyIGlzIHN1YnNjcmliZWQuJyk7CiAgICB1cGRhdGVTdWJzY3JpcHRpb25PblNlcnZlcihzdWJzY3JpcHRpb24pOwogICAgaXNTdWJzY3JpYmVkID0gdHJ1ZTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIExvZy5pbmZvKCJGYWlsZWQgdG8gc3Vic2NyaWJlIHRoZSB1c2VyOiAiLmNvbmNhdChKU09OLnN0cmluZ2lmeShlcnJvcikpKTsKICB9KTsKfQoKZnVuY3Rpb24gdXBkYXRlU3Vic2NyaXB0aW9uT25TZXJ2ZXIoc3Vic2NyaXB0aW9uKSB7CiAgLy8gVE9ETzogU2VuZCBzdWJzY3JpcHRpb24gdG8gYXBwbGljYXRpb24gc2VydmVyCiAgaWYgKHN1YnNjcmlwdGlvbikgewogICAgLy8gSlNPTi5zdHJpbmdpZnkoc3Vic2NyaXB0aW9uKTsKICAgIExvZy5pbmZvKCJTdWJzY3JpcHRpb24gaXMgcmVhZHk6ICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHN1YnNjcmlwdGlvbikpKTsKICB9IGVsc2Ugey8vIAogIH0KfQ=="},{"version":3,"sources":["/Users/dduru/VSCode/OmarzeUI/src/router/util/include/service-worker/index.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { Log } from '@/components/util';\n\n\n\n\nconst applicationServerPublicKey = \n    'BDZFI4PsijM0K-hP6vpUFoPBiNz-akLznGmxXsLaZSN4fBURyhYX6OKd9oJvk_jxA638xqUZ0V42hCixN427OKo';\n\nlet isSubscribed: boolean = false;\nlet swRegistration: any = null;\n\nfunction urlB64ToUint8Array(base64String: string) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n}\n\n\nif ('serviceWorker' in navigator && 'PushManager' in window) {\n    Log.info('Service Worker and Push is supported');\n\n    navigator\n        .serviceWorker.register('sw.js')\n        .then(\n            (swReg: ServiceWorkerRegistration) => {\n                Log.info(`Service Worker is registered ${JSON.stringify(swReg)}`);\n\n                swRegistration = swReg;\n                initializeUI();\n            }\n        )\n        .catch(\n            (error: any) => {\n                Log.info(`Service Worker Error ${JSON.stringify(error)}`);\n            }\n        );\n} else {\n    Log.info('Push messaging is not supported');\n    // TODO: implement fall-back\n}\n\n\nfunction initializeUI() {\n    // Set the initial subscription value\n    swRegistration\n    .pushManager\n    .getSubscription()\n    .then(\n        (subscription: any) => {\n            isSubscribed = !(subscription === null);\n\n            updateSubscriptionOnServer(subscription);\n\n            if (isSubscribed) {\n                Log.info('User IS subscribed.');\n            } else {\n                Log.info('User IS NOT subscribed.');\n                subscribeUser();\n            }\n        }\n    );\n}\n\n\nfunction subscribeUser() {\n    const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\n\n    swRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey,\n    })\n    .then(\n        (subscription: any) => {\n            Log.info('User is subscribed.');\n\n            updateSubscriptionOnServer(subscription);\n\n            isSubscribed = true;\n        }\n    )\n    .catch(\n        (error: any) => {\n            Log.info(`Failed to subscribe the user: ${JSON.stringify(error)}`);\n        }\n    );\n}\n\n\nfunction updateSubscriptionOnServer(subscription: any) {\n    // TODO: Send subscription to application server\n\n    if (subscription) {\n        // JSON.stringify(subscription);\n        Log.info(`Subscription is ready: ${JSON.stringify(subscription)}`);\n    } else {\n        // \n    }\n}\n\n\n\n\n\n"],"sourceRoot":""}]}